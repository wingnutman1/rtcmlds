@*@using CMS_Web.Models
@model CMS_Web.Models.UserDisplay*@
    

@{
    ViewBag.Title = "Staff List";
}

@(Html.Kendo().Notification()
    .Name("popupNotification")
)

<p class="dataHeader">Staff</p>

<div id="vertical">
    @(Html.Kendo().TreeList<CMS_Web.Models.UserProfile>()
    .Name("treelist")
    .Columns(columns =>
    {
        columns.Add().Field(e => e.LastName).Width("20%");
        columns.Add().Field(e => e.FirstName).Width("15%");
        columns.Add().Field(e => e.PositionDescription).Width("20%");
        columns.Add().Field(e => e.Inactive).Width("10%").Template("#= Inactive ? 'Yes' : 'No' #");
        columns.Add().Command(command => command.Custom().Click("editUser").Name("EditUser")).Width("12%");
        columns.Add().Command(command => command.Custom().Click("editUserQualifications").Name("Qualifications")).Width("22%");
    })
    .Editable(editable => editable.Move(true))
    .Filterable()
    .Sortable()
    .Events(e => e.Drop("onDrop"))
    .DataSource(dataSource => dataSource
        .Read(read => read.Action("GetUserList", "Account"))
        .AutoSync(true)
        .ServerOperation(true)
        .Model(m =>
        {
            m.Id(f => f.UserId);
            m.ParentId(f => f.reportsTo);
            m.Expanded(true);
            m.Field(f => f.FirstName);
            m.Field(f => f.LastName);
            m.Field(f => f.reportsTo);
            m.Field(f => f.Inactive);
        })
    )
    .Height(540)
    )

</div>

<style scoped>
    #vertical {
        height: auto;
        width: 1000px;
        margin: 0 auto;
    }
</style>

 <!--Reference the SignalR library. -->
<script src="/Scripts/jquery.signalR-2.1.2.js"></script>
<!--Reference the autogenerated SignalR hub script. -->
<script src="/signalr/hubs"></script>


<script type="text/javascript">

    function onDrop(e) {
        var treeView = this,
            sourceItem = treeView.dataItem(e.source),
            destinationItem = treeView.dataItem(e.destination),
            parent = destinationItem;
        if (e.position != "over") {
            parent = parent.parentNode();
        }

        //if (parent == undefined) {
        //    parent = new parent();
        //    parent.id = 0;
        //}

        $.ajax({
            url: '@Url.Action("UpdateUserList","Account")',
            type: "POST",
            data: {
                id: sourceItem.id,
                reportsTo: parent ? parent.id : null
            }
        });
    }

    function editUser(e)
    {
        e.preventDefault();

        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        window.location.href = "@Url.Action("EditUsers", "Account")?id=" + dataItem.UserId;
    }

    function editUserQualifications(e)
    {
        e.preventDefault();

        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        window.location.href = "@Url.Action("EditUserQualifications", "Account")?id=" + dataItem.UserId;
    }

    $(document).ready(function () {


        // Hide the "busy" Gif at load:
        $("#divProcessing").hide();
        $("#divResult").hide();



        var messageHub = $.connection.messageHub;
        var userName = "@HttpContext.Current.User.Identity.Name";

        $.connection.hub.qs = { 'userName': userName };
        var popupNotification = $("#popupNotification").data("kendoNotification");

        if ($.connection.hub.state === $.signalR.connectionState.disconnected) {
            $.connection.hub.start().done(function () {//when the connection is ready,  

                popupNotification.show("Server Connection Established");
            });
        }

        messageHub.client.send = function (message) {
            if (message.messageType == "PM")
                popupNotification.show(message.message);
        };


    });

</script>
   