@{
    ViewBag.Title = "Team List";
}

<p class="dataHeader">Staff in Team : <b>@(ViewData["teamName"])</b></p>

@(Html.Kendo().Notification()
    .Name("popupNotification")
)

@using (Html.BeginForm())
{

    <div id="vertical">
        <div id="top-pane">
            <div id="horizontal" style="height: 100%; width: 100%;">
                <div id="left-pane">
                    <div class="messagesUserList">
                        <b>Click on Staff to Add</b>
                        @(Html.Kendo().ListView<CMS_Web.ViewModels.clientSelectorModel>()
                            .Name("staffList")
                            .TagName("div")
                            .Navigatable()
                            .Pageable()
                            .ClientTemplateId("template")
                            .Selectable(select => select.Mode(ListViewSelectionMode.Single))
                            .DataSource(dataSource => dataSource
                                .Read(read => read.Action("GetStaffForTeamList", "Account").Data("teamListID")
                                )
                            )
                            .Events(e => e
                                .Change("onStaffSelect")
                            )

                        )

                    </div>
                </div>
                <div id="right-pane">
                      @(Html.Kendo().Grid<CMS_Web.Models.StaffInTeam>()
                        .Name("staffInTeamGrid")
                        .Columns(columns =>
                        {
                            columns.Bound(p => p.StaffID).Hidden();
                            columns.ForeignKey(p => p.StaffID, (System.Collections.IEnumerable)ViewData["UserProfiles"], "UserID", "FullName").Title("Staff").Width("50%");
                            columns.Command(command => command.Custom("Remove").Click("removeStaff")).Width("15%");
                        })

                        .Pageable()
                        .Sortable()
                        .Scrollable()
                        .Filterable()
                        .HtmlAttributes(new { style = "height:100%" })
                        .Resizable(resize => resize.Columns(true))
                        .DataSource(dataSource => dataSource.Ajax()
                            .Model(model => model.Id(p => p.ID))
                            .Read(read => read.Action("GetStaffTeamList", "Account").Data("teamListID"))
                            )
                    )

                </div>
            </div>
        </div>
        <div id="bottom-pane">
            <div class="pane-content">
                <span class="k-button" style="float:right">
                    @Html.ActionLink("Return to " + ViewData["returnPage"], (string)ViewData["returnPage"], "Account")
                </span>
            </div>
        </div>
    </div>


}


<style scoped>
    #vertical {
        height: 600px;
        width: 1000px;
        margin: 0 auto;
    }

    .rootfolder {
        background-position: 0 0;
    }

    .folder {
        background-position: 0 -16px;
    }

    .pdf {
        background-position: 0 -32px;
    }

    .html {
        background-position: 0 -48px;
    }

    .image {
        background-position: 0 -64px;
    }

    #middle-pane {
        background-color: rgba(60, 70, 80, 0.10);
    }

    #bottom-pane {
        background-color: rgba(60, 70, 80, 0.15);
    }

    #left-pane, #center-pane, #right-pane {
        background-color: rgba(60, 70, 80, 0.05);
    }

    .pane-content {
        padding: 10px 10px;
    }
</style>

<script type="text/x-kendo-tmpl" id="template">
    <div class="listViewFormat">
        #= FirstName# #= LastName#
    </div>
</script>

<!--Reference the SignalR library. -->
<script src="/Scripts/jquery.signalR-2.1.2.js"></script>
<!--Reference the autogenerated SignalR hub script. -->
<script src="/signalr/hubs"></script>

<script>

    function teamListID()
    {
        var ID = @ViewData["teamListID"];
        return { teamListID: ID };
    }

    function removeStaff(e)
    {
        e.preventDefault();

        var teamID = teamListID().teamListID;

        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        window.location.href = "@Url.Action("RemoveStaffFromTeamList", "Account")?staffID=" + dataItem.StaffID + "&teamID=" + teamID;
    }

    function onStaffSelect(e) {

        e.preventDefault();
        var userID = selectedStaff().userID;
        var teamID = teamListID().teamListID;
        window.location.href = "@Url.Action("AddStaffToTeamList", "Account")?staffID=" + userID + "&teamID=" + teamID;
    }

    function selectedStaff() {

        var list = $("#staffList").data("kendoListView");
        if (list != null) {
            var index = list.select().index();
            if (index != -1) {
                var dataItem = list.dataSource.view()[index];
                var user = dataItem.UserId;
                return {
                    userID: user
                };
            }
            else
                return {
                    userID: 0
                };
        }
        else
            return {
                userID: 0
            };
    }
    
    $(document).ready(function () {


        // Hide the "busy" Gif at load:
        $("#divProcessing").hide();
        $("#divResult").hide();



        var messageHub = $.connection.messageHub;
        var userName = "@HttpContext.Current.User.Identity.Name";

        $.connection.hub.qs = { 'userName': userName };
        var popupNotification = $("#popupNotification").data("kendoNotification");

        if ($.connection.hub.state === $.signalR.connectionState.disconnected) {
            $.connection.hub.start().done(function () {//when the connection is ready,

                popupNotification.show("Server Connection Established");
            });
        }

        messageHub.client.send = function (message) {
            if (message.messageType == "PM")
                popupNotification.show(message.message);
        };


    });


    $("#vertical").kendoSplitter({
        orientation: "vertical",
        panes: [
            { collapsible: false, resizable: false }, // Controls parent vertical pane 
            { collapsible: false, size: "50px" }, //Controls bottom pane
        ]
    });

    $("#horizontal").kendoSplitter({
        panes: [
            { collapsible: true, size: "20%" },
            { collapsible: true, size: "70%" }
        ]
    });

</script>
