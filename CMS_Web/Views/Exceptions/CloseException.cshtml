@model CMS_Web.Models.ExceptionDetail

@{
    ViewBag.Title = "Close Exception";
}

<p class="dataHeader">Close Exception.</p>

@(Html.Kendo().Notification()
    .Name("popupNotification")
)

<div id="vertical">
    <div style="font-size:x-large; margin-bottom:10px">
        @ViewData["ExceptionDescription"]
    </div>
    <div>
        <span style="font-size:x-large">Reason to close Exception :</span>
        <input id="Reason" name="Reason" required class="k-textbox" style="width:700px" />
    </div>
    <span class="k-button" style="float:left; margin-top:10px; margin-bottom:10px">
        <a onclick="checkOKtoClose()">Close Exception</a>
    </span>

    <span class="k-button" style="float:right; margin-top:10px; margin-bottom:10px">
        @Html.ActionLink("Return to " + ViewData["returnPage"], (string)ViewData["returnPage"], "Exceptions")
    </span>

</div>

<style scoped>
    #vertical {
        height: auto;
        width: 1000px;
        margin: 0 auto;
    }
</style>

<!--Reference the SignalR library. -->
<script src="/Scripts/jquery.signalR-2.1.2.js"></script>
<!--Reference the autogenerated SignalR hub script. -->
<script src="/signalr/hubs"></script>

<script>

    function incidentID()
    {
        var ID = @ViewData["ExceptionID"];
        return { incidentID: ID };
    }

    function checkOKtoClose()
    {
        var reasonVal = $("#Reason").val();

        if (reasonVal == '')
            alert("Please enter the reason you are closing the exception.")
        else
        {
            var ID = @ViewData["ExceptionID"];
            window.location.href = "@Url.Action("setExceptionStatusToClose", "Exceptions")?ID=" + ID + '&Reason=' + reasonVal;
        }
    }

    $(document).ready(function () {


        var messageHub = $.connection.messageHub;
        var userName = "@HttpContext.Current.User.Identity.Name";

        $.connection.hub.qs = { 'userName': userName };
        var popupNotification = $("#popupNotification").data("kendoNotification");

        if ($.connection.hub.state === $.signalR.connectionState.disconnected) {
            $.connection.hub.start().done(function () {//when the connection is ready,

                popupNotification.show("Server Connection Established");
            });
        }

        messageHub.client.send = function (message) {
            if (message.messageType == "PM")
                popupNotification.show(message.message);
        };


    });

</script>
